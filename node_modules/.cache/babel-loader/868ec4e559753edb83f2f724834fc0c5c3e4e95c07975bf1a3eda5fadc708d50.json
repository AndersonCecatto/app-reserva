{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport LoadComponent from './LoadComponent.vue';\nimport AlertComponent from './AlertComponent.vue';\nimport GenericMethods from '@/mixins/GenericMethods';\nimport DataDialogFieldComponent from './Field/DataDialogFieldComponent.vue';\nimport TimeDialogFieldComponent from './Field/TimeDialogFieldComponent.vue';\nimport RequestMethods from '@/mixins/RequestMethods';\nimport AutoCompleteFieldComponent from './Field/AutoCompleteFieldComponent.vue';\nexport default {\n  components: {\n    LoadComponent,\n    AlertComponent,\n    DataDialogFieldComponent,\n    TimeDialogFieldComponent,\n    AutoCompleteFieldComponent\n  },\n  name: 'AgendarComponent',\n  data: vm => ({\n    loader: false,\n    date: vm.FormatDate(new Date().toISOString().substring(0, 10)),\n    modal2: false,\n    time: null,\n    modal: false,\n    comemoracao: \"Não\",\n    descricao: null,\n    items: ['Sim', 'Não'],\n    periodo: [],\n    QuantidadePessoas: null,\n    localPeriodo: null,\n    usuarioId: null,\n    requiredPeopleRules: [v => v != null && v != 0 || 'Campo Obrigatório.'],\n    requiredRules: [v => v != null || 'Campo Obrigatório.']\n  }),\n  mixins: [GenericMethods, RequestMethods],\n  methods: {\n    retornoUsuario(retorno) {\n      this.usuarioId = retorno?.id;\n    },\n    retornoData(retorno) {\n      this.date = retorno;\n    },\n    retornoTime(retorno) {\n      this.time = retorno;\n    },\n    DesabilitarCampoDscricao() {\n      if (this.comemoracao != 'Sim') {\n        this.descricao = null;\n        return true;\n      }\n      return false;\n    },\n    requestSalvarReserva() {\n      this.loader = !this.loader;\n      this.RequestPost('Reserva', {\n        dataReserva: this.parseDate(this.date),\n        dataCadastro: new Date().toISOString(),\n        horario: this.time != null ? this.parseTime(this.date, this.time) : null,\n        periodoId: this.localPeriodo != null ? this.localPeriodo.replace(/\\D+/g, '') : null,\n        empresaId: this.dadosEmpresa.id,\n        usuarioId: this.usuarioId ?? this.dadosUsuario.Id,\n        ativo: false,\n        quantidadePessoas: this.QuantidadePessoas,\n        ehComemoracao: false,\n        descricaoComemoracao: '',\n        cancelada: false\n      }, () => {\n        this.EnableAlert(\"Concluido com sucesso.\", \"success\");\n        this.$emit('reservado', true);\n      }, error => this.RetornoErro(error), () => this.loader = !this.loader);\n    },\n    Salvar() {\n      // this.$refs.form.validate()\n      // if (this.ValidarCampos() == false) return\n\n      this.requestCapacidadeReserva();\n\n      // if (this.dadosEmpresa.bloquearReserva) {\n      //     this.EnableAlert(this.dadosEmpresa.mensagemRapida, \"warning\")\n      //     window.scrollTo(0,0);\n      //     return\n      // }\n    },\n\n    requestBuscarPeriodoPorEmpresaId() {\n      this.loader = !this.loader;\n      this.RequestGet('Periodo/' + this.dadosEmpresa.id, retorno => {\n        retorno.data.forEach(element => {\n          this.periodo.push(element.id + ' - ' + element.descricao);\n        });\n      }, error => this.$emit('response', {\n        success: false,\n        response: error\n      }), () => this.loader = !this.loader);\n    },\n    requestCapacidadeReserva() {\n      this.loader = !this.loader;\n      this.RequestGet('Reserva/CapacidadeReserva/' + this.dadosEmpresa.id + '/' + this.localPeriodo != null ? this.localPeriodo.replace(/\\D+/g, '') : null + '/' + this.parseDate(this.date) + '/' + this.time != null ? this.parseTime(this.date, this.time) : null, retorno => {\n        debugger;\n        if (retorno.data + parseInt(this.QuantidadePessoas) > this.dadosEmpresa.quantidadePessoas) {\n          this.EnableAlert(\"Capacidade Maxima atingida\", \"warning\");\n          return;\n        }\n        this.requestSalvarReserva();\n      }, error => this.$emit('response', {\n        success: false,\n        response: error\n      }), () => this.loader = !this.loader);\n    },\n    ValidarCampos() {\n      if (this.time == null) return false;\n      if (this.QuantidadePessoas == null) return false;\n    },\n    regraCalendario() {\n      return 'anderson';\n    }\n  },\n  created() {\n    if (this.dadosEmpresa.reservaPorPeriodo) this.requestBuscarPeriodoPorEmpresaId();\n  },\n  props: {\n    dadosEmpresa: Object,\n    dadosUsuario: Object\n  }\n};","map":{"version":3,"mappings":";AAoFA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;EAEAA;IAAAC;IAAAC;IAAAC;IAAAC;IAAAC;EAAA;EAEAC;EACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC,sBACAC,iDACA;IACAC,gBACAD;EAEA;EACAE;EACAC;IAEAC;MACA;IACA;IAEAC;MACA;IACA;IAEAC;MACA;IACA;IAEAC;MACA,+BACA;QACA;QACA;MACA;MAEA;IACA;IAEAC;MAEA;MAEA,4BACA;QACAC;QACAC;QACAC;QACAC;QACAC;QACAf;QACAgB;QACAC;QACAC;QACAC;QACAC;MACA,GACA,MACA;QACA;QACA;MACA,GACAC,kCACA;IACA;IAEAC;MACA;MACA;;MAEA;;MAEA;MACA;MACA;MACA;MACA;IAEA;;IAEAC;MAEA;MAEA,mDACAC;QACAA;UACA;QACA;MACA,GACAH;QAAAI;QAAAC;MAAA,IACA;IACA;IAEAC;MAEA;MAEA,+CACA,6BACA,iFACA,kCACA,iEACAH;QACA;QACA;UACA;UACA;QACA;QAEA;MACA,GACAH;QAAAI;QAAAC;MAAA,IACA;IACA;IAEAE;MACA;MACA;IACA;IAEAC;MACA;IACA;EACA;EAEAC;IACA,yCACA;EACA;EAEAC;IACAC;IACAC;EACA;AACA","names":["components","LoadComponent","AlertComponent","DataDialogFieldComponent","TimeDialogFieldComponent","AutoCompleteFieldComponent","name","data","loader","date","modal2","time","modal","comemoracao","descricao","items","periodo","QuantidadePessoas","localPeriodo","usuarioId","requiredPeopleRules","v","requiredRules","mixins","methods","retornoUsuario","retornoData","retornoTime","DesabilitarCampoDscricao","requestSalvarReserva","dataReserva","dataCadastro","horario","periodoId","empresaId","ativo","quantidadePessoas","ehComemoracao","descricaoComemoracao","cancelada","error","Salvar","requestBuscarPeriodoPorEmpresaId","retorno","success","response","requestCapacidadeReserva","ValidarCampos","regraCalendario","created","props","dadosEmpresa","dadosUsuario"],"sourceRoot":"src/components","sources":["AgendarComponent.vue"],"sourcesContent":["<template>\r\n    <v-card class=\"pb-3\">\r\n        <alert-component :texto-alerta=\"textoAlerta\" :tipo='tipoAlerta' v-if=\"alerta == true\"/>\r\n        <v-card-title>\r\n            <v-row class=\"pl-5\">{{ dadosEmpresa.nome }}</v-row>\r\n            <v-row class=\"pr-6\">\r\n                <v-spacer></v-spacer>\r\n                <h6>Reservar</h6>\r\n            </v-row>\r\n            </v-card-title>\r\n        <form\r\n            ref=\"form\" \r\n            lazy-validation\r\n            class=\"px-7 mt-3\"\r\n        >\r\n          \r\n            <auto-complete-field-component \r\n                Label=\"Usuário\" \r\n                Icon=\"mdi-account-circle\" \r\n                Url=\"Usuario\"\r\n                @retorno=\"retornoUsuario\"\r\n                v-if=\"this.dadosUsuario.EmpresaId != ''\"\r\n                />\r\n            <data-dialog-field-component \r\n                @retornoData=\"retornoData\" \r\n                :regra-desabilita-campos=\"dadosEmpresa.diasAtendimento\"\r\n                titulo=\"Data\"/>\r\n            <time-dialog-field-component \r\n                @retornoTime=\"retornoTime\" titulo=\"Horário\"\r\n                :minimo=\"dadosEmpresa.timeInicial\"\r\n                :maximo=\"dadosEmpresa.timeFinal\"\r\n                v-if=\"!dadosEmpresa.reservaPorPeriodo\"\r\n                />\r\n            <v-select\r\n                v-if=\"dadosEmpresa.reservaPorPeriodo\"\r\n                v-model=\"localPeriodo\"\r\n                :items=\"periodo\"\r\n                label=\"Periodo\"\r\n                prepend-icon=\"mdi-list-box\"\r\n                color=\"green\"\r\n            ></v-select>\r\n            <v-text-field\r\n                v-model=\"QuantidadePessoas\"\r\n                prepend-icon=\"mdi-account-plus\"\r\n                label=\"Quantidade Pessoas\"\r\n                required\r\n                type=\"number\"\r\n                pattern=\"\\d*\"\r\n                :rules=\"requiredPeopleRules\"\r\n                color=\"green\"\r\n            >\r\n            </v-text-field>\r\n            <v-select\r\n                v-model=\"comemoracao\"\r\n                :items=\"items\"\r\n                label=\"Comemoração\"\r\n                prepend-icon=\"mdi-party-popper\"\r\n                color=\"green\"\r\n            ></v-select>\r\n            <v-text-field\r\n                v-model=\"descricao\"\r\n                prepend-icon=\"mdi-message-arrow-right\"\r\n                label=\"Descrição\"\r\n                :disabled=\"DesabilitarCampoDscricao()\"\r\n                color=\"green\"\r\n            >\r\n            </v-text-field>\r\n            <v-row class=\"px-3 py-7\">\r\n                <v-btn\r\n                    outlined\r\n                    large\r\n                    block\r\n                    color=\"green\"\r\n                    @click=\"Salvar()\"\r\n                    >\r\n                    Confirmar\r\n                </v-btn>\r\n            </v-row>\r\n        </form>\r\n        <load-component :Ativo=\"loader\"/>\r\n    </v-card>\r\n</template>\r\n<script>\r\n\r\nimport LoadComponent from './LoadComponent.vue'\r\nimport AlertComponent from './AlertComponent.vue'\r\nimport GenericMethods from '@/mixins/GenericMethods'\r\nimport DataDialogFieldComponent from './Field/DataDialogFieldComponent.vue'\r\nimport TimeDialogFieldComponent from './Field/TimeDialogFieldComponent.vue'\r\nimport RequestMethods from '@/mixins/RequestMethods'\r\nimport AutoCompleteFieldComponent from './Field/AutoCompleteFieldComponent.vue'\r\n\r\nexport default {\r\n\r\n  components: { LoadComponent, AlertComponent, DataDialogFieldComponent, TimeDialogFieldComponent, AutoCompleteFieldComponent },\r\n\r\n    name: 'AgendarComponent',\r\n    data: vm => ({\r\n        loader: false,\r\n        date: vm.FormatDate(new Date().toISOString().substring(0, 10)),\r\n        modal2: false,\r\n        time: null,\r\n        modal: false,\r\n        comemoracao: \"Não\",\r\n        descricao: null,\r\n        items: ['Sim', 'Não'],\r\n        periodo: [],\r\n        QuantidadePessoas: null,\r\n        localPeriodo: null,\r\n        usuarioId: null,\r\n        requiredPeopleRules: [\r\n            v => v != null && v != 0 || 'Campo Obrigatório.'\r\n        ],\r\n        requiredRules: [\r\n            v => v != null || 'Campo Obrigatório.',\r\n        ]\r\n    }),\r\n    mixins: [GenericMethods, RequestMethods],\r\n    methods: {\r\n\r\n        retornoUsuario(retorno) {\r\n            this.usuarioId = retorno?.id\r\n        },\r\n\r\n        retornoData(retorno) {\r\n            this.date = retorno\r\n        },\r\n\r\n        retornoTime(retorno) {\r\n            this.time = retorno\r\n        },\r\n\r\n        DesabilitarCampoDscricao() {\r\n            if(this.comemoracao != 'Sim')\r\n            {\r\n                this.descricao = null;\r\n                return true\r\n            }\r\n        \r\n            return false\r\n        },\r\n\r\n        requestSalvarReserva() {\r\n\r\n            this.loader = !this.loader;\r\n\r\n            this.RequestPost('Reserva',\r\n            {\r\n                dataReserva: this.parseDate(this.date),\r\n                dataCadastro: new Date().toISOString(),\r\n                horario: this.time != null ? this.parseTime(this.date, this.time) : null,\r\n                periodoId: this.localPeriodo != null ? this.localPeriodo.replace(/\\D+/g, '') : null,\r\n                empresaId: this.dadosEmpresa.id,\r\n                usuarioId: this.usuarioId ?? this.dadosUsuario.Id,\r\n                ativo: false,\r\n                quantidadePessoas: this.QuantidadePessoas,\r\n                ehComemoracao: false,\r\n                descricaoComemoracao: '',\r\n                cancelada: false\r\n            },\r\n            () => \r\n                {\r\n                    this.EnableAlert(\"Concluido com sucesso.\", \"success\")\r\n                    this.$emit('reservado', true)\r\n                },\r\n            (error) => this.RetornoErro(error),\r\n            () => (this.loader = !this.loader))\r\n        },\r\n\r\n        Salvar() {\r\n            // this.$refs.form.validate()\r\n            // if (this.ValidarCampos() == false) return\r\n\r\n            this.requestCapacidadeReserva()\r\n\r\n            // if (this.dadosEmpresa.bloquearReserva) {\r\n            //     this.EnableAlert(this.dadosEmpresa.mensagemRapida, \"warning\")\r\n            //     window.scrollTo(0,0);\r\n            //     return\r\n            // }\r\n           \r\n        },\r\n\r\n        requestBuscarPeriodoPorEmpresaId() {\r\n\r\n            this.loader = !this.loader;\r\n\r\n            this.RequestGet('Periodo/'+this.dadosEmpresa.id,\r\n            (retorno) => {\r\n                retorno.data.forEach(element => {\r\n                    this.periodo.push(element.id + ' - ' + element.descricao)\r\n                });\r\n            }, \r\n            (error) => this.$emit('response', { success: false, response: error }),\r\n            () => (this.loader = !this.loader))\r\n        },\r\n\r\n        requestCapacidadeReserva() {\r\n            \r\n            this.loader = !this.loader;\r\n\r\n            this.RequestGet('Reserva/CapacidadeReserva/'\r\n            + this.dadosEmpresa.id + '/'\r\n            + this.localPeriodo != null ? this.localPeriodo.replace(/\\D+/g, '') : null + '/'\r\n            + this.parseDate(this.date) + '/'\r\n            + this.time != null ? this.parseTime(this.date, this.time) : null,\r\n            (retorno) => {\r\n                debugger\r\n                if (retorno.data + parseInt(this.QuantidadePessoas) > this.dadosEmpresa.quantidadePessoas) {\r\n                    this.EnableAlert(\"Capacidade Maxima atingida\", \"warning\")\r\n                    return\r\n                }\r\n\r\n                this.requestSalvarReserva()\r\n            }, \r\n            (error) => this.$emit('response', { success: false, response: error }),\r\n            () => (this.loader = !this.loader))\r\n        },\r\n\r\n        ValidarCampos() {\r\n            if (this.time == null) return false\r\n            if (this.QuantidadePessoas == null) return false\r\n        },\r\n\r\n        regraCalendario() {\r\n            return 'anderson'\r\n        }\r\n    },\r\n\r\n    created() {\r\n        if (this.dadosEmpresa.reservaPorPeriodo)\r\n            this.requestBuscarPeriodoPorEmpresaId()\r\n    },\r\n\r\n    props: {\r\n        dadosEmpresa: Object,\r\n        dadosUsuario: Object\r\n    }\r\n}\r\n</script>\r\n<style>\r\n    \r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}