{"ast":null,"code":"import RequestMethods from '@/mixins/RequestMethods';\nimport GenericMethods from '@/mixins/GenericMethods';\nexport default {\n  name: \"AutoCompleteFieldComponent\",\n  data: () => ({\n    entries: [],\n    isLoading: false,\n    model: null,\n    search: null\n  }),\n  mixins: [RequestMethods, GenericMethods],\n  computed: {\n    fields() {\n      debugger;\n      if (!this.model) return [];\n      return Object.keys(this.model).map(key => {\n        return {\n          key,\n          value: this.model[key] || 'n/a'\n        };\n      });\n    },\n    items() {\n      return this.entries.map(entry => {\n        const Description = entry.id + ' - ' + entry.nome;\n        return Object.assign({}, entry, {\n          Description\n        });\n      });\n    }\n  },\n  watch: {\n    search(val) {\n      debugger;\n      // Items have already been loaded\n      if (this.items.length > 0) return;\n\n      // Items have already been requested\n      if (this.isLoading) return;\n      this.isLoading = true;\n      this.RequestGet(this.Url, retorno => {\n        this.entries = retorno.data;\n      }, error => this.RetornoErro(error), () => this.isLoading = false);\n    },\n    model(val) {\n      this.$emit('retorno', val);\n    }\n  },\n  created() {\n    debugger;\n    //this.items.push(this.receberDados)\n  },\n\n  props: {\n    Url: String,\n    Label: String,\n    Icon: String,\n    receberDados: Object\n  }\n};","map":{"version":3,"mappings":"AAeA;AACA;AAEA;EACAA;EAEAC;IACAC;IACAC;IACAC;IACAC;EACA;EACAC;EACAC;IACAC;MACA;MACA;MAEA;QACA;UACAC;UACAC;QACA;MACA;IACA;IACAC;MACA;QACA;QACA;UAAAC;QAAA;MACA;IACA;EACA;EAEAC;IACAR;MACA;MACA;MACA;;MAEA;MACA;MAEA;MAEA,0BACAS;QACA;MACA,GACAC,kCACA;IAEA;IAEAX;MACA;IACA;EACA;EAEAY;IACA;IACA;EACA;;EAEAC;IACAC;IACAC;IACAC;IACAC;EACA;AACA","names":["name","data","entries","isLoading","model","search","mixins","computed","fields","key","value","items","Description","watch","retorno","error","created","props","Url","Label","Icon","receberDados"],"sourceRoot":"src/components/Field","sources":["AutoCompleteFieldComponent.vue"],"sourcesContent":["<template>\r\n      <v-autocomplete\r\n        v-model=\"items[0]\"\r\n        :items=\"items\"\r\n        :loading=\"isLoading\"\r\n        :search-input.sync=\"search\"\r\n        item-text=\"Description\"\r\n        item-value=\"id\"\r\n        :label=\"this.Label\"\r\n        :prepend-icon=\"this.Icon\"\r\n        return-object\r\n      ></v-autocomplete>\r\n</template>\r\n<script>\r\n\r\nimport RequestMethods from '@/mixins/RequestMethods'\r\nimport GenericMethods from '@/mixins/GenericMethods'\r\n\r\nexport default {\r\n    name: \"AutoCompleteFieldComponent\",\r\n\r\n    data: () => ({\r\n        entries: [],\r\n        isLoading: false,\r\n        model: null,\r\n        search: null,\r\n    }),\r\n    mixins: [RequestMethods, GenericMethods],\r\n    computed: {\r\n      fields () {\r\n        debugger\r\n        if (!this.model) return []\r\n\r\n        return Object.keys(this.model).map(key => {\r\n          return {\r\n            key,\r\n            value: this.model[key] || 'n/a',\r\n          }\r\n        })\r\n      },\r\n      items () {\r\n        return this.entries.map(entry => {\r\n          const Description = entry.id + ' - ' + entry.nome\r\n          return Object.assign({}, entry, { Description })\r\n        })\r\n      },\r\n    },\r\n\r\n    watch: {\r\n      search (val) {\r\n        debugger\r\n        // Items have already been loaded\r\n        if (this.items.length > 0) return\r\n\r\n        // Items have already been requested\r\n        if (this.isLoading) return\r\n\r\n        this.isLoading = true\r\n         \r\n        this.RequestGet(this.Url,\r\n        (retorno) => {\r\n          this.entries = retorno.data\r\n        },\r\n        (error) => this.RetornoErro(error),\r\n        () => (this.isLoading = false))\r\n\r\n      },\r\n      \r\n      model (val) {\r\n          this.$emit('retorno', val)\r\n      },\r\n    },\r\n\r\n    created() {\r\n        debugger\r\n        //this.items.push(this.receberDados)\r\n    },\r\n\r\n    props: {\r\n      Url: String,\r\n      Label: String,\r\n      Icon: String,\r\n      receberDados: Object\r\n    }\r\n}\r\n</script>\r\n<style>\r\n    \r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}