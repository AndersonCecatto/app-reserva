{"ast":null,"code":"import api from \"@/services/api\";\nexport default {\n  methods: {\n    RequestPost(url, dados, functionResponse, functionErro, after) {\n      api.post(url, dados).then(response => functionResponse(response)).catch(error => functionErro(error)).finally(() => after);\n    },\n    RequestGet(url, functionResponse, functionErro, after) {\n      api.get(url).then(response => functionResponse(response)).catch(error => functionErro(error)).finally(() => after);\n    },\n    RequestPut(url, dados, functionResponse, functionErro, after) {\n      api.put(url, dados).then(response => functionResponse(response)).catch(error => functionErro(error)).finally(() => after);\n    },\n    RequestDelete(url, dados, functionResponse, functionErro, after) {\n      api.delete(url + '/' + dados).then(response => functionResponse(response)).catch(error => functionErro(error)).finally(() => after);\n    }\n  }\n};","map":{"version":3,"names":["api","methods","RequestPost","url","dados","functionResponse","functionErro","after","post","then","response","catch","error","finally","RequestGet","get","RequestPut","put","RequestDelete","delete"],"sources":["C:/Users/Anderson/Desktop/Projeto de Reservas/AppBaseReserva/app-reserva/src/mixins/RequestMethods.js"],"sourcesContent":["import api from \"@/services/api\";\r\n\r\nexport default {\r\n\r\n    methods: {\r\n        \r\n        RequestPost(url, dados, functionResponse, functionErro, after) {\r\n\r\n            api.post(url, dados)\r\n            .then(response => functionResponse(response))\r\n            .catch(error => functionErro(error))\r\n            .finally(() => after)\r\n        },\r\n\r\n        RequestGet(url, functionResponse, functionErro, after) {\r\n\r\n            api.get(url)\r\n            .then(response => functionResponse(response))\r\n            .catch(error => functionErro(error))\r\n            .finally(() => after)\r\n        },\r\n\r\n        RequestPut(url, dados, functionResponse, functionErro, after) {\r\n\r\n            api.put(url, dados)\r\n            .then(response => functionResponse(response))\r\n            .catch(error => functionErro(error))\r\n            .finally(() => after)\r\n        },\r\n\r\n        RequestDelete(url, dados, functionResponse, functionErro, after) {\r\n\r\n            api.delete(url+'/'+dados)\r\n            .then(response => functionResponse(response))\r\n            .catch(error => functionErro(error))\r\n            .finally(() => after)\r\n        },\r\n    },\r\n}"],"mappings":"AAAA,OAAOA,GAAG,MAAM,gBAAgB;AAEhC,eAAe;EAEXC,OAAO,EAAE;IAELC,WAAW,CAACC,GAAG,EAAEC,KAAK,EAAEC,gBAAgB,EAAEC,YAAY,EAAEC,KAAK,EAAE;MAE3DP,GAAG,CAACQ,IAAI,CAACL,GAAG,EAAEC,KAAK,CAAC,CACnBK,IAAI,CAACC,QAAQ,IAAIL,gBAAgB,CAACK,QAAQ,CAAC,CAAC,CAC5CC,KAAK,CAACC,KAAK,IAAIN,YAAY,CAACM,KAAK,CAAC,CAAC,CACnCC,OAAO,CAAC,MAAMN,KAAK,CAAC;IACzB,CAAC;IAEDO,UAAU,CAACX,GAAG,EAAEE,gBAAgB,EAAEC,YAAY,EAAEC,KAAK,EAAE;MAEnDP,GAAG,CAACe,GAAG,CAACZ,GAAG,CAAC,CACXM,IAAI,CAACC,QAAQ,IAAIL,gBAAgB,CAACK,QAAQ,CAAC,CAAC,CAC5CC,KAAK,CAACC,KAAK,IAAIN,YAAY,CAACM,KAAK,CAAC,CAAC,CACnCC,OAAO,CAAC,MAAMN,KAAK,CAAC;IACzB,CAAC;IAEDS,UAAU,CAACb,GAAG,EAAEC,KAAK,EAAEC,gBAAgB,EAAEC,YAAY,EAAEC,KAAK,EAAE;MAE1DP,GAAG,CAACiB,GAAG,CAACd,GAAG,EAAEC,KAAK,CAAC,CAClBK,IAAI,CAACC,QAAQ,IAAIL,gBAAgB,CAACK,QAAQ,CAAC,CAAC,CAC5CC,KAAK,CAACC,KAAK,IAAIN,YAAY,CAACM,KAAK,CAAC,CAAC,CACnCC,OAAO,CAAC,MAAMN,KAAK,CAAC;IACzB,CAAC;IAEDW,aAAa,CAACf,GAAG,EAAEC,KAAK,EAAEC,gBAAgB,EAAEC,YAAY,EAAEC,KAAK,EAAE;MAE7DP,GAAG,CAACmB,MAAM,CAAChB,GAAG,GAAC,GAAG,GAACC,KAAK,CAAC,CACxBK,IAAI,CAACC,QAAQ,IAAIL,gBAAgB,CAACK,QAAQ,CAAC,CAAC,CAC5CC,KAAK,CAACC,KAAK,IAAIN,YAAY,CAACM,KAAK,CAAC,CAAC,CACnCC,OAAO,CAAC,MAAMN,KAAK,CAAC;IACzB;EACJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}