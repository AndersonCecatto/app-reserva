{"ast":null,"code":"export default {\n  data: () => ({\n    alerta: false,\n    textoAlerta: \"\",\n    tipoAlerta: \"\",\n    loader: false,\n    dialog: false,\n    search: '',\n    maskTelefone: '(##) #####-####',\n    maskCnpj: '##.###.###/####-##',\n    maskCep: '##.###-###',\n    currentDate: new Date(new Date().toISOString()),\n    required: [v => !!v || 'Campo Obrigatório'],\n    emailRules: [v => !!v || 'Campo Obrigatório', v => /.+@.+\\..+/.test(v) || 'Usuário deve ser um email valido.']\n  }),\n  methods: {\n    EnableAlert(texto, tipoAlerta) {\n      this.alerta = true;\n      this.tipoAlerta = tipoAlerta;\n      this.textoAlerta = texto;\n      setTimeout(() => {\n        this.alerta = false;\n      }, 2300);\n    },\n    getColor(status) {\n      if (status == 'Cancelada') return 'error';else if (status == 'Aguardando') return 'warning';else if (status == 'Pendente') return 'primary';else return 'success';\n    },\n    RetornoStatus(element) {\n      debugger;\n      let dtHora = new Date(element.dataReserva).toISOString().substring(0, 10) + ' ' + new Date(element.dataReserva).toISOString().substring(0, 10);\n      if (!isNaN(Date.parse(dtHora))) {\n        let dataReserva = new Date(dtHora);\n        if (!element.cancelada && dataReserva < this.currentDate) return 'Pendente';\n      }\n      if (element.cancelada) return 'Cancelada';else if (element.ativo) return 'Concluida';else return \"Aguardando\";\n    },\n    RetornoErro(error) {\n      debugger;\n      let retorno = error.response == undefined || error.response.status == 401 ? error.message : error.response.data;\n      this.EnableAlert(retorno, \"error\");\n      window.scrollTo(0, 0);\n      console.log(error);\n    },\n    FormatDate(date) {\n      if (!date) return null;\n      const [year, month, day] = date.split('-');\n      return `${day}/${month}/${year}`;\n    },\n    parseDate(date) {\n      if (!date) return null;\n      const [day, month, year] = date.split('/');\n      return `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`;\n    },\n    parseTime(date, time) {\n      if (!time || !date) return null;\n      return new Date(this.parseDate(date) + ' ' + time + ':00.000Z').toISOString();\n    },\n    parseTimeDate(date) {\n      if (!date) return null;\n      return new Date(date).getHours() + ':' + new Date(date).getMinutes().toString().padStart(2, 0);\n    }\n  }\n};","map":{"version":3,"names":["data","alerta","textoAlerta","tipoAlerta","loader","dialog","search","maskTelefone","maskCnpj","maskCep","currentDate","Date","toISOString","required","v","emailRules","test","methods","EnableAlert","texto","setTimeout","getColor","status","RetornoStatus","element","dtHora","dataReserva","substring","isNaN","parse","cancelada","ativo","RetornoErro","error","retorno","response","undefined","message","window","scrollTo","console","log","FormatDate","date","year","month","day","split","parseDate","padStart","parseTime","time","parseTimeDate","getHours","getMinutes","toString"],"sources":["C:/Users/Anderson/Desktop/Projeto de Reservas/AppBaseReserva/app-reserva/src/mixins/GenericMethods.js"],"sourcesContent":["export default {\r\n    data: () => ({\r\n        alerta: false,\r\n        textoAlerta: \"\",\r\n        tipoAlerta: \"\",\r\n        loader: false,\r\n        dialog: false,\r\n        search: '',\r\n        maskTelefone: '(##) #####-####',\r\n        maskCnpj: '##.###.###/####-##',\r\n        maskCep: '##.###-###',\r\n        currentDate: new Date(new Date().toISOString()),\r\n        required: [\r\n            v => !!v || 'Campo Obrigatório'\r\n        ],\r\n        emailRules: [\r\n            v => !!v || 'Campo Obrigatório',\r\n            v => /.+@.+\\..+/.test(v) || 'Usuário deve ser um email valido.',\r\n        ]\r\n    }),\r\n    methods: {\r\n        EnableAlert(texto, tipoAlerta) {\r\n            this.alerta = true\r\n            this.tipoAlerta = tipoAlerta\r\n            this.textoAlerta = texto\r\n\r\n            setTimeout(() => {\r\n                this.alerta = false\r\n            }, 2300)\r\n        },\r\n        getColor(status) {\r\n            if (status == 'Cancelada') return 'error'\r\n            else if (status == 'Aguardando') return 'warning'\r\n            else if (status == 'Pendente') return 'primary'\r\n            else return 'success'\r\n        },\r\n\r\n        RetornoStatus(element) {\r\n\r\n            debugger\r\n\r\n            let dtHora = new Date(element.dataReserva).toISOString().substring(0,10)+ ' ' +new Date(element.dataReserva).toISOString().substring(0,10)\r\n\r\n            if(!isNaN(Date.parse(dtHora))){\r\n                let dataReserva = new Date(dtHora)\r\n\r\n                if (!element.cancelada && dataReserva < this.currentDate)\r\n                    return 'Pendente'\r\n            }\r\n\r\n            if (element.cancelada)\r\n                return 'Cancelada'\r\n            else if (element.ativo)\r\n                return 'Concluida'\r\n            else \r\n                return \"Aguardando\"\r\n        },\r\n\r\n        RetornoErro(error) {\r\n            debugger\r\n            let retorno = error.response == undefined || error.response.status == 401 ? error.message : error.response.data\r\n\r\n            this.EnableAlert(retorno, \"error\")\r\n            window.scrollTo(0,0);\r\n            console.log(error)\r\n        },\r\n\r\n        FormatDate(date) {\r\n            if (!date) return null\r\n\r\n            const [year, month, day] = date.split('-')\r\n            return `${day}/${month}/${year}`\r\n        },\r\n\r\n        parseDate(date) {\r\n            if (!date) return null\r\n            \r\n            const [day, month, year] = date.split('/')\r\n            return `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`\r\n        },\r\n\r\n        parseTime(date, time) {\r\n            if (!time || !date) return null\r\n            return new Date(this.parseDate(date) + ' ' + time+':00.000Z').toISOString()\r\n        },\r\n\r\n        parseTimeDate(date) {\r\n            if (!date) return null\r\n            return new Date(date).getHours()+':'+(new Date(date).getMinutes()).toString().padStart(2, 0)\r\n        }\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}