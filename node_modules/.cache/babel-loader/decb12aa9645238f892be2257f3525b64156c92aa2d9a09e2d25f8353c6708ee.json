{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport LoadComponent from './LoadComponent.vue';\nimport AlertComponent from './AlertComponent.vue';\nimport GenericMethods from '@/mixins/GenericMethods';\nimport RequestMethods from '@/mixins/RequestMethods';\nimport DialogPersistentComponent from './Field/DialogPersistentComponent.vue';\nexport default {\n  components: {\n    AlertComponent,\n    LoadComponent,\n    DialogPersistentComponent\n  },\n  name: \"HistoricoComponent\",\n  mixins: [GenericMethods, RequestMethods],\n  data: () => ({\n    itemEnvio: null,\n    acao: null,\n    sortBy: 'Id',\n    sortDesc: true,\n    search: '',\n    headers: [{\n      text: 'Codigo',\n      align: 'start',\n      value: 'Id'\n    }, {\n      text: 'Restaurante',\n      align: 'start',\n      value: 'Empresa'\n    }, {\n      text: 'Data',\n      value: 'Data'\n    }, {\n      text: 'Horário/Periodo',\n      value: 'Horario',\n      align: 'center'\n    }, {\n      text: 'Quantidade Pessoas',\n      value: 'Pessoas',\n      align: 'center'\n    }, {\n      text: 'Status',\n      value: 'Status',\n      align: 'center'\n    }, {\n      text: 'Ações',\n      value: 'actions',\n      align: 'center',\n      sortable: false\n    }, {\n      text: '',\n      value: 'data-table-expand'\n    }],\n    historicos: [],\n    motivoCancelamento: null,\n    dialogAvaliacao: false,\n    nota: 0\n  }),\n  methods: {\n    TempoParaCancelamento(item) {\n      let dtHora = this.parseDate(item.Data) + ' ' + item.Horario;\n      if (isNaN(Date.parse(dtHora))) return false;\n      let dataReserva = new Date(dtHora);\n      let dataLimiteCancel = new Date(dataReserva.getTime());\n      dataLimiteCancel.setMinutes(dataReserva.getMinutes() - item.TempoCancelamento);\n      let dataAgora = this.currentDate;\n      if (dataAgora > dataLimiteCancel && dataAgora < dataReserva) {\n        this.EnableAlert(\"Tempo excedido para cancelamento. Tempo permitido \" + item.TempoCancelamento + \" minutos.\", \"warning\");\n        return true;\n      }\n      return false;\n    },\n    cancelarReserva(item) {\n      this.motivoCancelamento = null;\n      if (item.Status == 'Cancelada') {\n        this.EnableAlert(\"Reserva já cancelada.\", \"warning\");\n        return;\n      } else if (item.Status == 'Concluida') {\n        this.EnableAlert(\"Reserva não pode ser cancelada.\", \"warning\");\n        return;\n      } else if (item.Status == 'Pendente') {\n        this.EnableAlert(\"Não é permitido cancelar reservas passadas.\", \"warning\");\n        return;\n      }\n      if (this.TempoParaCancelamento(item)) return;\n      this.acao = \"Cancelar\";\n      this.itemEnvio = item;\n      this.dialog = !this.dialog;\n    },\n    avaliarAtendimento(item) {\n      this.dialogAvaliacao = !this.dialogAvaliacao;\n    },\n    retornoDialog(retorno) {\n      if (retorno.acao == \"Cancelar\" && retorno.success) this.requestAlterarStatus(retorno.response.Id, true, this.motivoCancelamento, true);\n      this.dialog = !this.dialog;\n    },\n    retornoDialogAvaliacao(retorno) {\n      debugger;\n      this.dialogAvaliacao = !this.dialogAvaliacao;\n    },\n    requestAlterarStatus(id, cancelar, motivoCancelamento, ativo) {\n      this.loader = !this.loader;\n      this.RequestPost('Reserva/AlterarStatus', {\n        id: id,\n        Cancelada: cancelar,\n        MotivoCancelamento: motivoCancelamento,\n        Ativo: ativo\n      }, response => this.RetornoAlterarStatus(response), error => this.RetornoErro(error), () => {\n        this.loader = !this.loader;\n        this.requestReservas();\n      });\n    },\n    RetornoAlterarStatus(response) {\n      this.EnableAlert(\"Concluido com sucesso.\", \"success\");\n      console.log(response);\n    },\n    requestReservas() {\n      this.loader = !this.loader;\n      let url = this.listaHistoricoEmpresa ? 'Reserva/' + this.dadosUsuario.Id + '/' + this.dadosUsuario.EmpresaId : 'Reserva/' + this.dadosUsuario.Id + '/' + 0;\n      this.RequestGet(url, retorno => this.RetornoReservas(retorno), error => this.RetornoErro(error), () => this.loader = !this.loader);\n    },\n    RetornoReservas(retorno) {\n      this.historicos = [];\n      retorno.data.forEach(element => {\n        this.historicos.push({\n          Id: element.id,\n          Empresa: element.empresa.nome,\n          Data: this.FormatDate(new Date(element.dataReserva).toISOString().substring(0, 10)),\n          Horario: element.periodo != null ? element.periodoId + ' - ' + element.periodo.descricao : this.parseTimeDate(element.horario),\n          Servico: element.servico != null ? element.servico.descricao + ' - R$ ' + parseFloat(element.servico.valor).toFixed(2) : null,\n          Pessoas: element.quantidadePessoas,\n          Status: this.RetornoStatus(element),\n          Reservado: element.reservado,\n          EhComomoracao: element.ehComemoracao ? 'Sim' : 'Não',\n          Observacoes: 'Observações: ' + element.descricaoComemoracao.replaceAll('\\n', '<br\\>'),\n          DescricaoCancelamento: element.motivoCancelamento,\n          TempoCancelamento: element.empresa.empresaAdicional.tempoPermitidoCancelamento\n        });\n      });\n    }\n  },\n  created() {\n    this.requestReservas();\n  },\n  watch: {\n    refresh(val) {\n      this.requestReservas();\n    },\n    dadosUsuario(val) {\n      this.requestReservas();\n    }\n  },\n  props: {\n    refresh: Boolean,\n    dadosUsuario: Object,\n    listaHistoricoEmpresa: Boolean\n  }\n};","map":{"version":3,"mappings":";AA+HA;AACA;AACA;AACA;AACA;AAEA;EACAA;IAAAC;IAAAC;IAAAC;EAAA;EAEAC;EACAC;EACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC,UACA;MAAAC;MAAAC;MAAAC;IAAA,GACA;MAAAF;MAAAC;MAAAC;IAAA,GACA;MAAAF;MAAAE;IAAA,GACA;MAAAF;MAAAE;MAAAD;IAAA,GACA;MAAAD;MAAAE;MAAAD;IAAA,GACA;MAAAD;MAAAE;MAAAD;IAAA,GACA;MAAAD;MAAAE;MAAAD;MAAAE;IAAA,GACA;MAAAH;MAAAE;IAAA,EACA;IACAE;IACAC;IACAC;IACAC;EACA;EAEAC;IACAC;MAEA;MAEA,+BACA;MAEA;MAEA;MACAC;MAEA;MAEA;QACA;QACA;MACA;MAEA;IACA;IAEAC;MAEA;MAEA;QACA;QACA;MACA,OACA;QACA;QACA;MACA,OACA;QACA;QACA;MACA;MAEA,sCACA;MAEA;MACA;MACA;IACA;IAEAC;MACA;IACA;IAEAC;MAEA,mDACA;MAEA;IACA;IAEAC;MACA;MAEA;IACA;IAEAC;MACA;MAEA,0CACA;QACAC;QACAC;QACAC;QACAC;MACA,GACAC,iDACAC,kCACA;QACA;QAEA;MACA;IACA;IAEAC;MAEA;MACAC;IACA;IAEAC;MACA;MAEA,uCACA,wEACA;MAEA,qBACAC,0CACAJ,kCACA;IACA;IAEAK;MACA;MAEAD;QACA;UACAE;UACAC;UACAC;UACAC;UACAC;UACAC;UACAC;UACAC;UACAC;UACAC;UACAC;UACAC;QACA;MAEA;IACA;EACA;EACAC;IACA;EACA;EAEAC;IAEAC;MACA;IACA;IAEAC;MACA;IACA;EACA;EAEAC;IACAF;IACAC;IACAE;EACA;AACA","names":["components","AlertComponent","LoadComponent","DialogPersistentComponent","name","mixins","data","itemEnvio","acao","sortBy","sortDesc","search","headers","text","align","value","sortable","historicos","motivoCancelamento","dialogAvaliacao","nota","methods","TempoParaCancelamento","dataLimiteCancel","cancelarReserva","avaliarAtendimento","retornoDialog","retornoDialogAvaliacao","requestAlterarStatus","id","Cancelada","MotivoCancelamento","Ativo","response","error","RetornoAlterarStatus","console","requestReservas","retorno","RetornoReservas","Id","Empresa","Data","Horario","Servico","Pessoas","Status","Reservado","EhComomoracao","Observacoes","DescricaoCancelamento","TempoCancelamento","created","watch","refresh","dadosUsuario","props","listaHistoricoEmpresa"],"sourceRoot":"src/components","sources":["HistoricoClienteComponent.vue"],"sourcesContent":["<template>\r\n    <v-card class=\"pb-3\">\r\n        <alert-component :texto-alerta=\"textoAlerta\" :tipo='tipoAlerta' v-if=\"alerta == true\"/>\r\n        <v-card-title>\r\n            Reservas\r\n            <v-spacer></v-spacer>\r\n            <v-text-field\r\n                v-model=\"search\"\r\n                append-icon=\"mdi-magnify\"\r\n                label=\"Pesquisar\"\r\n                single-line\r\n                hide-details\r\n                xs=\"220\"\r\n            ></v-text-field>\r\n        </v-card-title>\r\n        \r\n        <v-card-text>\r\n            <v-data-table\r\n                :search=\"search\"\r\n                :headers=\"headers\"\r\n                :items=\"historicos\"\r\n                :footer-props=\"{\r\n                    'items-per-page-text':'Linhas por pagina',\r\n                    'items-per-page-options': [5, 10, 20, 31]\r\n                }\"\r\n                :header-props=\"{\r\n                    'sortByText': 'Ordenar'\r\n                }\"\r\n                :sort-desc.sync=\"sortDesc\"\r\n                :sort-by.sync=\"sortBy\"\r\n                show-expand\r\n                item-key=\"Id\"\r\n            >\r\n                <template v-slot:item.Status=\"{ item }\">\r\n                    <v-chip\r\n                        :color=\"getColor(item.Status)\"\r\n                        dark\r\n                    >\r\n                        {{ item.Status }}\r\n                    </v-chip>\r\n                </template>\r\n                <template v-slot:item.Empresa=\"{ item }\">\r\n                    <td class=\"font-weight-black\">{{ item.Empresa }}</td>\r\n                </template>\r\n                <template v-slot:item.actions=\"{ item }\">\r\n                    <v-icon\r\n                        color=\"yellow\"\r\n                        class=\"mr-3\"\r\n                        large\r\n                        @click=\"avaliarAtendimento(item)\"\r\n                    >\r\n                        mdi-star-check\r\n                    </v-icon>\r\n                    <v-icon\r\n                        color=\"error\"\r\n                        class=\"mr-3\"\r\n                        large\r\n                        @click=\"cancelarReserva(item)\"\r\n                    >\r\n                        mdi-close-circle\r\n                    </v-icon>\r\n                </template>\r\n                <template v-slot:expanded-item=\"{ headers, item }\">\r\n                    <td :colspan=\"headers.length\" class=\"complementar\">\r\n                        <div v-if=\"item.Status != 'Cancelada'\">\r\n                            <v-row>\r\n                                Comemoração: {{ item.EhComomoracao }}\r\n                            </v-row>\r\n                            <v-row v-if=\"item.Servico != null\">\r\n                                Serviço: {{ item.Servico }}\r\n                            </v-row>\r\n                            <v-row v-if=\"item.Observacoes != ''\" v-html=\"item.Observacoes\"/>\r\n                        </div>\r\n                        <div v-if=\"item.Status == 'Cancelada'\">\r\n                            Motivo cancelamento: {{ item.DescricaoCancelamento }}\r\n                        </div>\r\n                    </td>\r\n                </template>\r\n            </v-data-table>\r\n            <load-component :Ativo=\"loader\"/>\r\n            <dialog-persistent-component \r\n                :item=\"itemEnvio\" \r\n                titulo=\"Cancelar Reserva\" \r\n                :dialog=\"dialog\" \r\n                tamanho=\"400\" \r\n                @response=\"retornoDialog\" \r\n                :acao=\"acao\"\r\n            >\r\n            <v-text-field\r\n                v-model=\"motivoCancelamento\"\r\n                label=\"Motivo do Cancelamento\"\r\n                prepend-icon=\"mdi-text-box-edit\"\r\n                color=\"green\"\r\n            />\r\n        </dialog-persistent-component>\r\n        <dialog-persistent-component\r\n            titulo=\"Avalie nosso atendimento\"\r\n            :dialog=\"dialogAvaliacao\"\r\n            tamanho=\"400\"\r\n            @response=\"retornoDialogAvaliacao\"\r\n        >\r\n            <div class=\"text-center my-5\">\r\n                <v-rating\r\n                    v-model=\"nota\"\r\n                    color=\"yellow darken-3\"\r\n                    background-color=\"grey darken-1\"\r\n                    empty-icon=\"$ratingFull\"\r\n                    half-increments\r\n                    hover\r\n                    large\r\n                    prepend-icon=\"mdi-arrow-right-bold\"\r\n                ></v-rating>\r\n            </div>\r\n            <v-textarea\r\n                v-model=\"descricao\"\r\n                prepend-icon=\"mdi-message-arrow-right\"\r\n                label=\"Observações\"\r\n                color=\"green\"\r\n                :rules=\"rules\"\r\n                counter\r\n            />\r\n        </dialog-persistent-component>\r\n        </v-card-text>\r\n    </v-card>\r\n</template>\r\n<script>\r\n\r\nimport LoadComponent from './LoadComponent.vue';\r\nimport AlertComponent from './AlertComponent.vue';\r\nimport GenericMethods from '@/mixins/GenericMethods';\r\nimport RequestMethods from '@/mixins/RequestMethods';\r\nimport DialogPersistentComponent from './Field/DialogPersistentComponent.vue';\r\n\r\nexport default {\r\n    components: { AlertComponent, LoadComponent, DialogPersistentComponent },\r\n\r\n    name: \"HistoricoComponent\",\r\n    mixins: [GenericMethods, RequestMethods],\r\n    data: () => ({\r\n        itemEnvio: null,\r\n        acao: null,\r\n        sortBy: 'Id',\r\n        sortDesc: true,\r\n        search: '',\r\n        headers: [\r\n            { text: 'Codigo', align: 'start', value: 'Id',},\r\n            { text: 'Restaurante', align: 'start', value: 'Empresa', },\r\n            { text: 'Data', value: 'Data', },\r\n            { text: 'Horário/Periodo', value: 'Horario', align: 'center' },\r\n            { text: 'Quantidade Pessoas', value: 'Pessoas', align: 'center' },\r\n            { text: 'Status', value: 'Status', align: 'center' },\r\n            { text: 'Ações', value: 'actions', align: 'center', sortable: false}, \r\n            { text: '',  value: 'data-table-expand' },\r\n        ],\r\n        historicos: [],\r\n        motivoCancelamento: null,\r\n        dialogAvaliacao: false,\r\n        nota: 0\r\n    }),\r\n\r\n    methods: {\r\n        TempoParaCancelamento(item) {\r\n\r\n            let dtHora = this.parseDate(item.Data)+ ' ' +item.Horario\r\n\r\n            if(isNaN(Date.parse(dtHora)))\r\n                return false\r\n\r\n            let dataReserva = new Date(dtHora)\r\n\r\n            let dataLimiteCancel = new Date(dataReserva.getTime())\r\n            dataLimiteCancel.setMinutes(dataReserva.getMinutes() - item.TempoCancelamento)\r\n\r\n            let dataAgora = this.currentDate\r\n\r\n            if (dataAgora > dataLimiteCancel && dataAgora < dataReserva) {\r\n                this.EnableAlert(\"Tempo excedido para cancelamento. Tempo permitido \" + item.TempoCancelamento + \" minutos.\", \"warning\")\r\n                return true\r\n            }\r\n\r\n            return false\r\n        },\r\n\r\n        cancelarReserva(item) {\r\n\r\n            this.motivoCancelamento = null;\r\n\r\n            if (item.Status == 'Cancelada') {\r\n                this.EnableAlert(\"Reserva já cancelada.\", \"warning\")\r\n                return\r\n            } \r\n            else if (item.Status == 'Concluida') { \r\n                this.EnableAlert(\"Reserva não pode ser cancelada.\", \"warning\")\r\n                return\r\n            }\r\n            else if (item.Status == 'Pendente') { \r\n                this.EnableAlert(\"Não é permitido cancelar reservas passadas.\", \"warning\")\r\n                return\r\n            }\r\n\r\n            if (this.TempoParaCancelamento(item))\r\n                return\r\n\r\n            this.acao = \"Cancelar\"\r\n            this.itemEnvio = item\r\n            this.dialog = !this.dialog\r\n        },\r\n\r\n        avaliarAtendimento(item) {\r\n            this.dialogAvaliacao = !this.dialogAvaliacao\r\n        },\r\n\r\n        retornoDialog(retorno) {\r\n\r\n            if (retorno.acao == \"Cancelar\" && retorno.success) \r\n                this.requestAlterarStatus(retorno.response.Id, true, this.motivoCancelamento, true)\r\n\r\n            this.dialog = !this.dialog\r\n        },\r\n\r\n        retornoDialogAvaliacao(retorno) {\r\n            debugger\r\n\r\n            this.dialogAvaliacao = !this.dialogAvaliacao\r\n        },\r\n        \r\n        requestAlterarStatus(id, cancelar, motivoCancelamento, ativo) {\r\n            this.loader = !this.loader;\r\n\r\n            this.RequestPost('Reserva/AlterarStatus',\r\n            {\r\n                id: id,\r\n                Cancelada: cancelar,\r\n                MotivoCancelamento: motivoCancelamento,\r\n                Ativo: ativo\r\n            },\r\n            (response) => this.RetornoAlterarStatus(response),\r\n            (error) => this.RetornoErro(error),\r\n            () => { \r\n                this.loader = !this.loader \r\n                \r\n                this.requestReservas()\r\n            })\r\n        },\r\n\r\n        RetornoAlterarStatus(response) {\r\n            \r\n            this.EnableAlert(\"Concluido com sucesso.\", \"success\")\r\n            console.log(response)\r\n        },\r\n\r\n        requestReservas() {\r\n            this.loader = !this.loader;\r\n\r\n            let url = this.listaHistoricoEmpresa ?\r\n                    'Reserva/'+this.dadosUsuario.Id+'/'+this.dadosUsuario.EmpresaId :\r\n                    'Reserva/'+this.dadosUsuario.Id+'/'+0\r\n\r\n            this.RequestGet(url,\r\n            (retorno) => this.RetornoReservas(retorno),\r\n            (error) => this.RetornoErro(error),\r\n            () => (this.loader = !this.loader))\r\n        },\r\n\r\n        RetornoReservas(retorno) {\r\n            this.historicos = []\r\n            \r\n            retorno.data.forEach(element => {\r\n                this.historicos.push({\r\n                    Id: element.id,\r\n                    Empresa: element.empresa.nome,\r\n                    Data: this.FormatDate(new Date(element.dataReserva).toISOString().substring(0,10)),\r\n                    Horario: element.periodo != null ? element.periodoId + ' - ' + element.periodo.descricao : this.parseTimeDate(element.horario),\r\n                    Servico: element.servico != null ? element.servico.descricao + ' - R$ ' + parseFloat(element.servico.valor).toFixed(2) : null,\r\n                    Pessoas: element.quantidadePessoas,\r\n                    Status: this.RetornoStatus(element),\r\n                    Reservado: element.reservado,\r\n                    EhComomoracao: element.ehComemoracao ? 'Sim' : 'Não',\r\n                    Observacoes: 'Observações: '+ element.descricaoComemoracao.replaceAll('\\n', '<br\\>'),\r\n                    DescricaoCancelamento: element.motivoCancelamento,\r\n                    TempoCancelamento: element.empresa.empresaAdicional.tempoPermitidoCancelamento\r\n                })\r\n                \r\n            });\r\n        }\r\n    },\r\n    created() {\r\n        this.requestReservas()\r\n    },\r\n\r\n    watch: {\r\n\r\n        refresh (val) {\r\n            this.requestReservas()\r\n        },\r\n\r\n        dadosUsuario(val) {\r\n            this.requestReservas()\r\n        }\r\n    },\r\n\r\n    props: {\r\n        refresh: Boolean,\r\n        dadosUsuario: Object,\r\n        listaHistoricoEmpresa: Boolean\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n    .complementar {\r\n        padding: 20px !important;\r\n    }\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}