{"ast":null,"code":"import api from '@/services/api';\nimport LoadComponent from './LoadComponent.vue';\nimport AlertComponent from './AlertComponent.vue';\nimport GenericMethods from '@/mixins/GenericMethods';\nimport DataDialogFieldComponent from './Field/DataDialogFieldComponent.vue';\nimport TimeDialogFieldComponent from './Field/TimeDialogFieldComponent.vue';\nimport RequestMethods from '@/mixins/RequestMethods';\nimport AutoCompleteFieldComponent from './Field/AutoCompleteFieldComponent.vue';\nexport default {\n  components: {\n    LoadComponent,\n    AlertComponent,\n    DataDialogFieldComponent,\n    TimeDialogFieldComponent,\n    AutoCompleteFieldComponent\n  },\n  name: 'AgendarComponent',\n  data: vm => ({\n    loader: false,\n    date: vm.FormatDate(new Date(Date.now() - new Date().getTimezoneOffset() * 60000).toISOString().substring(0, 10)),\n    modal2: false,\n    time: null,\n    modal: false,\n    comemoracao: \"Não\",\n    descricao: null,\n    items: ['Sim', 'Não'],\n    periodo: ['Manhã', 'Tarde', \"Noite\"],\n    QuantidadePessoas: null,\n    requiredPeopleRules: [v => v != null && v != 0 || 'Campo Obrigatório.'],\n    requiredRules: [v => v != null || 'Campo Obrigatório.']\n  }),\n  mixins: [GenericMethods, RequestMethods],\n  methods: {\n    retornoData(retorno) {\n      this.date = retorno;\n    },\n    retornoTime(retorno) {\n      debugger;\n      this.time = retorno;\n    },\n    DesabilitarCampoDscricao() {\n      if (this.comemoracao != 'Sim') {\n        this.descricao = null;\n        return true;\n      }\n      return false;\n    },\n    Salvar() {\n      // this.$refs.form.validate()\n      // if (this.ValidarCampos() == false) return\n\n      this.loader = !this.loader;\n      debugger;\n      api.post('Reserva', {\n        dataReserva: this.parseDate(this.date),\n        dataCadastro: new Date().toISOString(),\n        horario: this.parseTime(this.date, this.time),\n        periodo: 1,\n        empresaId: this.dadosEmpresa.id,\n        usuarioId: 3,\n        //this.dadosUsuario.id,\n        ativo: false,\n        quantidadePessoas: this.QuantidadePessoas,\n        ehComemoracao: false,\n        descricaoComemoracao: '',\n        cancelada: false\n      }).then(response => {\n        this.EnableAlert(\"Concluido com sucesso.\", \"success\");\n        console.log(response);\n      }).catch(error => {\n        this.EnableAlert(error.message, \"error\");\n        window.scrollTo(0, 0);\n        console.log(error);\n      }).finally(() => this.loader = !this.loader);\n    },\n    ValidarCampos() {\n      if (this.time == null) return false;\n      if (this.QuantidadePessoas == null) return false;\n    },\n    regraCalendario() {\n      return 'anderson';\n    }\n  },\n  created() {\n    debugger;\n    let teste = this.dadosEmpresa;\n  },\n  props: {\n    dadosEmpresa: Object,\n    dadosUsuario: Object\n  }\n};","map":{"version":3,"mappings":"AA8FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;EAEAA;IAAAC;IAAAC;IAAAC;IAAAC;IAAAC;EAAA;EAEAC;EACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC,sBACAC,iDACA;IACAC,gBACAD;EAEA;EACAE;EACAC;IAEAC;MACA;IACA;IAEAC;MACA;MACA;IACA;IAEAC;MACA,+BACA;QACA;QACA;MACA;MAEA;IACA;IACAC;MACA;MACA;;MAEA;MAEA;MAEAC,oBACA;QACAC;QACAC;QACAC;QACAd;QACAe;QACAC;QAAA;QACAC;QACAC;QACAC;QACAC;QACAC;MACA,GACAC;QACA;QACAC;MACA,GACAC;QACA;QACAC;QACAF;MACA,GACAG;IAEA;IAEAC;MACA;MACA;IACA;IAEAC;MACA;IACA;EACA;EAEAC;IACA;IACA;EACA;EAEAC;IACAC;IACAC;EACA;AACA","names":["components","LoadComponent","AlertComponent","DataDialogFieldComponent","TimeDialogFieldComponent","AutoCompleteFieldComponent","name","data","loader","date","modal2","time","modal","comemoracao","descricao","items","periodo","QuantidadePessoas","requiredPeopleRules","v","requiredRules","mixins","methods","retornoData","retornoTime","DesabilitarCampoDscricao","Salvar","api","dataReserva","dataCadastro","horario","empresaId","usuarioId","ativo","quantidadePessoas","ehComemoracao","descricaoComemoracao","cancelada","then","console","catch","window","finally","ValidarCampos","regraCalendario","created","props","dadosEmpresa","dadosUsuario"],"sourceRoot":"src/components","sources":["AgendarComponent.vue"],"sourcesContent":["<template>\r\n    <v-card class=\"pb-3\">\r\n        <alert-component :texto-alerta=\"textoAlerta\" :tipo='tipoAlerta' v-if=\"alerta == true\"/>\r\n        <v-card-title>\r\n            <v-row class=\"pl-5\">{{ dadosEmpresa.nome }}</v-row>\r\n            <v-row class=\"pr-6\">\r\n                <v-spacer></v-spacer>\r\n                <h6>Reservar</h6>\r\n            </v-row>\r\n            </v-card-title>\r\n        <form\r\n            ref=\"form\" \r\n            lazy-validation\r\n        >\r\n            <v-col\r\n                cols=\"12\"\r\n                sm=\"12\"\r\n                md=\"12\"\r\n                class=\"px-7 mb-n7\"\r\n            >\r\n                <data-dialog-field-component \r\n                @retornoData=\"retornoData\" \r\n                :regra-desabilita-campos=\"dadosEmpresa.diasAtendimento\"/>\r\n            </v-col>\r\n            <v-col\r\n                cols=\"12\"\r\n                sm=\"12\"\r\n                md=\"12\"\r\n                class=\"px-7 my-n5\"\r\n            >\r\n                <time-dialog-field-component \r\n                    @retornoTime=\"retornoTime\" titulo=\"Horário\"\r\n                    :minimo=\"dadosEmpresa.timeInicial\"\r\n                    :maximo=\"dadosEmpresa.timeFinal\"/>\r\n            </v-col>\r\n            <v-select\r\n                v-if=\"dadosEmpresa.periodo == true\"\r\n                :items=\"periodo\"\r\n                label=\"Periodo\"\r\n                prepend-icon=\"mdi-clock-time-eight\"\r\n                class=\"px-7\"\r\n                color=\"green\"\r\n            ></v-select>\r\n            <auto-complete-field-component\r\n                Label=\"Periodo\"\r\n                Icon=\"mdi-list-box\" \r\n                Url=\"'Periodo/5\"\r\n            />\r\n            <v-text-field\r\n                v-model=\"QuantidadePessoas\"\r\n                prepend-icon=\"mdi-account-plus\"\r\n                label=\"Quantidade Pessoas\"\r\n                class=\"px-7\"\r\n                required\r\n                type=\"number\"\r\n                pattern=\"\\d*\"\r\n                :rules=\"requiredPeopleRules\"\r\n                color=\"green\"\r\n            >\r\n            </v-text-field>\r\n            <v-select\r\n                v-model=\"comemoracao\"\r\n                :items=\"items\"\r\n                label=\"Comemoração\"\r\n                prepend-icon=\"mdi-party-popper\"\r\n                class=\"px-7\"\r\n                color=\"green\"\r\n            ></v-select>\r\n            <v-text-field\r\n                v-model=\"descricao\"\r\n                prepend-icon=\"mdi-message-arrow-right\"\r\n                label=\"Descrição\"\r\n                class=\"px-7\"\r\n                :disabled=\"DesabilitarCampoDscricao()\"\r\n                color=\"green\"\r\n            >\r\n            </v-text-field>\r\n            <v-row class=\"px-10 py-7\">\r\n                <v-btn\r\n                    outlined\r\n                    large\r\n                    block\r\n                    color=\"green\"\r\n                    @click=\"Salvar()\"\r\n                    >\r\n                    Confirmar\r\n                </v-btn>\r\n            </v-row>\r\n        </form>\r\n        <load-component :Ativo=\"loader\"/>\r\n    </v-card>\r\n</template>\r\n<script>\r\n\r\nimport api from '@/services/api'\r\nimport LoadComponent from './LoadComponent.vue'\r\nimport AlertComponent from './AlertComponent.vue'\r\nimport GenericMethods from '@/mixins/GenericMethods'\r\nimport DataDialogFieldComponent from './Field/DataDialogFieldComponent.vue'\r\nimport TimeDialogFieldComponent from './Field/TimeDialogFieldComponent.vue'\r\nimport RequestMethods from '@/mixins/RequestMethods'\r\nimport AutoCompleteFieldComponent from './Field/AutoCompleteFieldComponent.vue'\r\n\r\nexport default {\r\n\r\n  components: { LoadComponent, AlertComponent, DataDialogFieldComponent, TimeDialogFieldComponent, AutoCompleteFieldComponent },\r\n\r\n    name: 'AgendarComponent',\r\n    data: vm => ({\r\n        loader: false,\r\n        date: vm.FormatDate((new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substring(0, 10)),\r\n        modal2: false,\r\n        time: null,\r\n        modal: false,\r\n        comemoracao: \"Não\",\r\n        descricao: null,\r\n        items: ['Sim', 'Não'],\r\n        periodo: ['Manhã', 'Tarde', \"Noite\"],\r\n        QuantidadePessoas: null,\r\n        requiredPeopleRules: [\r\n            v => v != null && v != 0 || 'Campo Obrigatório.'\r\n        ],\r\n        requiredRules: [\r\n            v => v != null || 'Campo Obrigatório.',\r\n        ]\r\n    }),\r\n    mixins: [GenericMethods, RequestMethods],\r\n    methods: {\r\n\r\n        retornoData(retorno) {\r\n            this.date = retorno\r\n        },\r\n\r\n        retornoTime(retorno) {\r\n            debugger\r\n            this.time = retorno\r\n        },\r\n\r\n        DesabilitarCampoDscricao() {\r\n            if(this.comemoracao != 'Sim')\r\n            {\r\n                this.descricao = null;\r\n                return true\r\n            }\r\n        \r\n            return false\r\n        },\r\n        Salvar() {\r\n            // this.$refs.form.validate()\r\n            // if (this.ValidarCampos() == false) return\r\n\r\n            this.loader = !this.loader;\r\n\r\n            debugger\r\n\r\n            api.post('Reserva', \r\n            {\r\n                dataReserva: this.parseDate(this.date),\r\n                dataCadastro: new Date().toISOString(),\r\n                horario: this.parseTime(this.date, this.time),\r\n                periodo: 1,\r\n                empresaId: this.dadosEmpresa.id,\r\n                usuarioId: 3,//this.dadosUsuario.id,\r\n                ativo: false,\r\n                quantidadePessoas: this.QuantidadePessoas,\r\n                ehComemoracao: false,\r\n                descricaoComemoracao: '',\r\n                cancelada: false\r\n            })\r\n            .then(response => {\r\n                this.EnableAlert(\"Concluido com sucesso.\", \"success\")\r\n                console.log(response)\r\n            })\r\n            .catch(error => {\r\n                this.EnableAlert(error.message, \"error\")\r\n                window.scrollTo(0,0);\r\n                console.log(error)\r\n            })\r\n            .finally(() => (this.loader = !this.loader))\r\n\r\n        },\r\n\r\n        ValidarCampos() {\r\n            if (this.time == null) return false\r\n            if (this.QuantidadePessoas == null) return false\r\n        },\r\n\r\n        regraCalendario() {\r\n            return 'anderson'\r\n        }\r\n    },\r\n\r\n    created() {\r\n        debugger\r\n        let teste = this.dadosEmpresa\r\n    },\r\n\r\n    props: {\r\n        dadosEmpresa: Object,\r\n        dadosUsuario: Object\r\n    }\r\n}\r\n</script>\r\n<style>\r\n    \r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}