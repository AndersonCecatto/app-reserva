{"ast":null,"code":"export default {\n  name: 'AgendarComponent',\n  data: vm => ({\n    date: new Date(Date.now() - new Date().getTimezoneOffset() * 60000).toISOString().substr(0, 10),\n    dateFormatted: vm.formatDate(new Date(Date.now() - new Date().getTimezoneOffset() * 60000).toISOString().substr(0, 10)),\n    menu1: false\n  }),\n  computed: {\n    computedDateFormatted() {\n      return this.formatDate(this.date);\n    }\n  },\n  watch: {\n    date(val) {\n      this.dateFormatted = this.formatDate(this.date);\n    }\n  },\n  methods: {\n    formatDate(date) {\n      if (!date) return null;\n      const [year, month, day] = date.split('-');\n      return `${month}/${day}/${year}`;\n    },\n    parseDate(date) {\n      if (!date) return null;\n      const [month, day, year] = date.split('/');\n      return `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`;\n    }\n  }\n};","map":{"version":3,"mappings":"AAoDA;EACAA;EACAC;IACAC;IACAC;IACAC;EACA;EAEAC;IACAC;MACA;IACA;EACA;EAEAC;IACAL;MACA;IACA;EACA;EAEAM;IACAC;MACA;MAEA;MACA;IACA;IACAC;MACA;MAEA;MACA;IACA;EACA;AACA","names":["name","data","date","dateFormatted","menu1","computed","computedDateFormatted","watch","methods","formatDate","parseDate"],"sourceRoot":"src/components","sources":["AgendarComponent.vue"],"sourcesContent":["<template>\r\n    <v-card class=\"pb-4\">\r\n        <v-card-title>Agendar</v-card-title>\r\n        <form>\r\n            <v-menu\r\n                ref=\"menu1\"\r\n                v-model=\"menu1\"\r\n                :close-on-content-click=\"false\"\r\n                transition=\"scale-transition\"\r\n                offset-y\r\n                max-width=\"290px\"\r\n                min-width=\"auto\"\r\n                class=\"px-15\"\r\n                >\r\n                <template v-slot:activator=\"{ on, attrs }\">\r\n                    <v-text-field\r\n                    v-model=\"dateFormatted\"\r\n                    label=\"Data\"\r\n                    hint=\"Dia/Mes/Ano format\"\r\n                    persistent-hint\r\n                    prepend-icon=\"mdi-calendar\"\r\n                    v-bind=\"attrs\"\r\n                    @blur=\"date = parseDate(dateFormatted)\"\r\n                    v-on=\"on\"\r\n                    ></v-text-field>\r\n                </template>\r\n                <v-date-picker\r\n                    v-model=\"date\"\r\n                    no-title\r\n                    @input=\"menu1 = false\"\r\n                ></v-date-picker>\r\n            </v-menu>\r\n            <v-text-field\r\n                label=\"Horário\"\r\n                class=\"px-15\"\r\n            >\r\n            </v-text-field>\r\n            <v-text-field\r\n                label=\"Quantidade Pessoas\"\r\n                class=\"px-15\"\r\n            >\r\n            </v-text-field>\r\n            <v-text-field\r\n                label=\"É Comemoração\"\r\n                class=\"px-15\"\r\n                bool\r\n            >\r\n            </v-text-field>\r\n        </form>\r\n    </v-card>\r\n</template>\r\n<script>\r\nexport default {\r\n    name: 'AgendarComponent',\r\n    data: vm => ({\r\n        date: (new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10),\r\n        dateFormatted: vm.formatDate((new Date(Date.now() - (new Date()).getTimezoneOffset() * 60000)).toISOString().substr(0, 10)),\r\n        menu1: false,\r\n    }),\r\n\r\n    computed: {\r\n        computedDateFormatted () {\r\n            return this.formatDate(this.date)\r\n        },\r\n    },\r\n\r\n    watch: {\r\n        date (val) {\r\n            this.dateFormatted = this.formatDate(this.date)\r\n        },\r\n    },\r\n\r\n    methods: {\r\n      formatDate (date) {\r\n        if (!date) return null\r\n\r\n        const [year, month, day] = date.split('-')\r\n        return `${month}/${day}/${year}`\r\n      },\r\n      parseDate (date) {\r\n        if (!date) return null\r\n\r\n        const [month, day, year] = date.split('/')\r\n        return `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`\r\n      },\r\n    },\r\n}\r\n</script>\r\n<style>\r\n    \r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}